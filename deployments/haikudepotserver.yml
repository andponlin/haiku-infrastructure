### HaikuDepotServer
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haikudepotserver
  labels:
    app: haikudepotserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: haikudepotserver
  strategy:
    # HDS needs a cross-instance cache before we can run multiple
    type: Recreate
  template:
    metadata:
      labels:
        app: haikudepotserver
    spec:
      containers:
      - name: haikudepotserver
        image: ghcr.io/haiku/haikudepotserver:1.0.161
        env:
        - name: SPRING_MAIL_HOST
          value: "smtp"
        - name: HDS_AUTHENTICATION_JWS_ISSUER
          value: "haikuinc.hds"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgres:5432/haikudepotserver"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: haikudepotserver-pg
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: haikudepotserver-pg
              key: password
        resources:
          limits:
            cpu: "1.0"
            memory: "2Gi"
          requests:
            cpu: "0.50"
            memory: "512Mi"
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 60
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 30
          failureThreshold: 2
---
apiVersion: v1
kind: Service
metadata:
  name: haikudepotserver
spec:
  selector:
    app: haikudepotserver
  ports:
  - name: www
    port: 80
    targetPort: 8080
---
# web frontends for haikudepotserver
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: haikudepotserver
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    traefik.ingress.kubernetes.io/router.entrypoints: web,webs
spec:
  tls:
  - hosts:
    - depot.haiku-os.org
    secretName: tls-cert-haikudepotserver
  rules:
  - host: depot.haiku-os.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: haikudepotserver
            port:
              name: www
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: haikudepotserver-pgbackup
spec:
  schedule: "0 0 * * 1,4"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: pgbackup
              image: docker.io/haiku/pgbackup:1.0
              args: ["backup", "haikudepotserver"]
              env:
              - name: S3_HOST
                value: "https://s3.eu-west-1.wasabisys.com"
              - name: S3_BUCKET
                value: haiku-backups
              - name: S3_MAX_AGE
                value: 15d
              - name: S3_KEY
                valueFrom:
                  secretKeyRef:
                    name: s3-backup
                    key: s3_key
              - name: S3_SECRET
                valueFrom:
                  secretKeyRef:
                    name: s3-backup
                    key: s3_secret
              - name: TWOSECRET
                valueFrom:
                  secretKeyRef:
                    name: s3-backup
                    key: twosecret
              - name: PG_HOSTNAME
                value: postgres
              - name: PG_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: postgres-admin
                    key: username
              - name: PG_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: postgres-admin
                    key: password
