### Haiku Trac
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trac
  labels:
    app: trac
spec:
  replicas: 1
  strategy:
    # RollingUpgrade can't be used because of RWO storage
    type: Recreate
  selector:
    matchLabels:
      app: trac
  template:
    metadata:
      labels:
        app: trac
    spec:
      containers:
        - name: trac
          image: ghcr.io/haiku/trac:1.6.0.4-pypy
          env:
            - name: PYPY_GC_MAX
              value: "1.8GB"
          resources:
            limits:
              cpu: "2.0"
              memory: "2Gi"
            requests:
              cpu: "0.15"
              memory: "512Mi"
          volumeMounts:
            - name: trac-data
              mountPath: /var/trac
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 5
            httpGet:
              path: /ticket/1
              port: 80
        - name: anubis
          image: ghcr.io/techarohq/anubis:latest
          imagePullPolicy: Always
          env:
            - name: "BIND"
              value: ":6969"
            - name: "DIFFICULTY"
              value: "4"
            - name: "METRICS_BIND"
              value: ":9090"
            - name: "SERVE_ROBOTS_TXT"
              value: "true"
            - name: "TARGET"
              value: "http://localhost:80"
            - name: "OG_PASSTHROUGH"
              value: "false"
            - name: "OG_EXPIRY_TIME"
              value: "24h"
          resources:
            limits:
              cpu: 750m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: trac-data
          persistentVolumeClaim:
            claimName: trac-data-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: trac-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: trac
spec:
  selector:
    app: trac
  ports:
    - name: web
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: trac-anubis
spec:
  selector:
    app: trac
  ports:
    - name: web
      port: 6969
      targetPort: 6969
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: trac-scanblock
spec:
  plugin:
    scanblock:
      blockPrivate: "false"
      blockSeconds: "120"
      minScanPercent: "60"
      minScanRequests: "50"
      minTotalRequests: "100"
      playGames: "true"
---
# web frontends for trac
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trac-web
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    traefik.ingress.kubernetes.io/router.entrypoints: web,webs
    traefik.ingress.kubernetes.io/router.middlewares: default-trac-scanblock@kubernetescrd,default-errorku@kubernetescrd
spec:
  tls:
    - hosts:
        - dev.haiku-os.org
      secretName: tls-cert-trac
  rules:
    - host: dev.haiku-os.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: trac-anubis
                port:
                  name: web
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: trac-pgbackup
spec:
  schedule: "0 0 * * 1,4"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: pgbackup
              image: ghcr.io/haiku/pgbackup:3.0.4
              args: ["backup", "trac"]
              env:
              - name: REMOTE_PREFIX
                value: haiku-backups
              - name: REMOTE_MAX_AGE
                value: 15d
              - name: PG_HOSTNAME
                value: postgres
              - name: PG_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: postgres-admin
                    key: username
              - name: PG_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: postgres-admin
                    key: password
              volumeMounts:
              - name: rclone-config
                mountPath: /root/.config
          volumes:
          - name: rclone-config
            secret:
              secretName: s3-backup
              items:
              - key: rclone.conf
                path: rclone/rclone.conf
              - key: twosecret
                path: twosecret
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: trac-pvbackup
spec:
  schedule: "0 1 * * 1,4"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          # volumes are attached to a single physical node (RWO), this ensures the backup
          # job always starts on the same physical node where trac is running
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - trac
                topologyKey: kubernetes.io/hostname
          containers:
            - name: pvbackup
              image: ghcr.io/haiku/pvbackup:3.0.4
              args: ["backup", "trac-data"]
              env:
              - name: REMOTE_PREFIX
                value: haiku-backups
              - name: REMOTE_MAX_AGE
                value: 15d
              volumeMounts:
              - name: rclone-config
                mountPath: /root/.config
              - name: trac-data
                mountPath: /pvs/trac-data
          volumes:
          - name: trac-data
            persistentVolumeClaim:
              claimName: trac-data-pvc
          - name: rclone-config
            secret:
              secretName: s3-backup
              items:
              - key: rclone.conf
                path: rclone/rclone.conf
              - key: twosecret
                path: twosecret
          restartPolicy: Never
