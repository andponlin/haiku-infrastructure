---
resource_types:
  - name: irccat-resource
    type: docker-image
    tags: ["((worker_tag))"]
    source:
      repository: haiku/irccat-resource
  - name: rclone
    type: registry-image
    tags: ["((worker_tag))"]
    source:
      repository: ghcr.io/kallisti5/concourse-rclone-resource
      tag: 1.68.1-1
roles:
  - name: owner
    oauth:
      groups: ["admin"]
    github:
      teams: ["haiku:infrastructure"]
    local:
      users: ["admin"]
resources:
  - name: haiku-git
    type: git
    tags: ["((worker_tag))"]
    icon: git
    source:
      uri: https://review.haiku-os.org/haiku.git
      branch: ((branch))
  - name: garage
    tags: ["((worker_tag))"]
    type: rclone
    source:
      config: |
        [remote]
        type = s3
        provider = Other
        env_auth = false
        force_path_style = false
        region = fin-hel-1
        access_key_id = ((s3key))
        secret_access_key = ((s3secret))
        endpoint = s3.haiku-os.org
        acl = public-read
  - name: irc
    type: irccat-resource
    tags: ["((worker_tag))"]
    icon: bullhorn
    source:
      uri: https://build.haiku-os.org/irccat/send
      secret: ((irccat-secret))
task-build-image: &task-build-image
  platform: linux
  image_resource:
    type: registry-image
    source: { repository: ((container-registry))/toolchain-worker-((branch)) }
  inputs:
    - name: haiku-git
  outputs:
    - name: generated.((arch))
    - name: compile_commands.((arch))
  run:
    path: /bin/bash
    args:
      - -e
      - -c
      - |
        cd generated.((arch))
        TOOLCHAIN_PRIMARY=""
        TOOLCHAIN_SECONDARY=""
        case "((arch))" in
            "x86_gcc2h")
                PRI_TRIPLET=$(../haiku-git/build/scripts/find_triplet x86_gcc2)
                SEC_TRIPLET=$(../haiku-git/build/scripts/find_triplet x86)
                TOOLCHAIN_PRIMARY="--cross-tools-prefix /toolchains/cross-tools-x86_gcc2/bin/${PRI_TRIPLET}-"
                TOOLCHAIN_SECONDARY="--cross-tools-prefix /toolchains/cross-tools-x86/bin/${SEC_TRIPLET}-"
                ;;
            "x86_64h")
                PRI_TRIPLET=$(../haiku-git/build/scripts/find_triplet x86_64)
                SEC_TRIPLET=$(../haiku-git/build/scripts/find_triplet x86)
                TOOLCHAIN_PRIMARY="--cross-tools-prefix /toolchains/cross-tools-x86_64/bin/${PRI_TRIPLET}-"
                TOOLCHAIN_SECONDARY="--cross-tools-prefix /toolchains/cross-tools-x86/bin/${SEC_TRIPLET}-"
                ;;
            *)
                PRI_TRIPLET=$(../haiku-git/build/scripts/find_triplet ((arch)))
                TOOLCHAIN_PRIMARY="--cross-tools-prefix /toolchains/cross-tools-((arch))/bin/${PRI_TRIPLET}-"
                TOOLCHAIN_SECONDARY=""
                ;;
        esac
        ../haiku-git/configure $TOOLCHAIN_PRIMARY $TOOLCHAIN_SECONDARY
        jam -j4 -c -q @((profile))-((media))
        # Generate compile_commands.json and normalize it to be functonal in an IDE
        cp compile_commands.json ../compile_commands.((arch))/compile_commands_((arch)).json
        sed -i 's/..\/haiku-git\///g' ../compile_commands.((arch))/compile_commands_((arch)).json
        sed -i 's/\/tmp\/build\/[a-z0-9]*\/generated\.[a-z0-9_]*/%%HAIKU_SRC_TOP%%/g' ../compile_commands.((arch))/compile_commands_((arch)).json
        sed -i "s/objects\//generated\/objects\//g" ../compile_commands.((arch))/compile_commands_((arch)).json
        sed -i "s/\/toolchains\/cross-tools\-/generated\/cross\-tools\-/g" ../compile_commands.((arch))/compile_commands_((arch)).json
# Jobs
jobs:
  - name: haiku-((branch))-((arch))
    public: true
    #on_success:
    #  try:
    #    put: irc
    #    params:
    #      message: "haiku.%PURPLE((branch))%NORMAL: build of %BLUE((arch))%NORMAL was %GREENsuccessful%NORMAL ${BUILD_URL}"
    on_failure:
      try:
        tags: ["((worker_tag))"]
        put: irc
        params:
          message: "haiku.%PURPLE((branch))%NORMAL: build of %BLUE((arch))%NORMAL %REDfailed%NORMAL ${BUILD_URL}"
    plan:
      - get: haiku-git
        tags: ["((worker_tag))"]
        trigger: true
      - task: build-((branch))-((profile))-((media))
        tags: ["((worker_tag))"]
        config:
          <<: *task-build-image
      - put: garage
        tags: ["((worker_tag))"]
        params:
          source: compile_commands.((arch))
          destination:
            - dir: "remote:haiku-extra/"
              args:
                - -c
                #- -vv
